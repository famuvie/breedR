% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGeneric.R, R/renderpf90.R
\name{renderpf90}
\alias{renderpf90}
\alias{renderpf90.default}
\alias{renderpf90.fixed}
\alias{renderpf90.diagonal}
\alias{renderpf90.breedr_modelframe}
\alias{renderpf90.effect_group}
\alias{renderpf90.generic}
\alias{renderpf90.additive_genetic_animal}
\alias{renderpf90.additive_genetic_competition}
\alias{renderpf90.permanent_environmental_competition}
\alias{renderpf90.splines}
\alias{renderpf90.blocks}
\alias{renderpf90.ar}
\title{Render a progsf90 effect}
\usage{
renderpf90(x)

\method{renderpf90}{default}(x)

\method{renderpf90}{fixed}(x)

\method{renderpf90}{diagonal}(x)

\method{renderpf90}{breedr_modelframe}(x, ntraits, weights)

\method{renderpf90}{effect_group}(x)

\method{renderpf90}{generic}(x)

\method{renderpf90}{additive_genetic_animal}(x)

\method{renderpf90}{additive_genetic_competition}(x)

\method{renderpf90}{permanent_environmental_competition}(x)

\method{renderpf90}{splines}(x)

\method{renderpf90}{blocks}(x)

\method{renderpf90}{ar}(x)
}
\arguments{
\item{x}{object of class breedr_modelframe, effect_group or breedr_effect.}

\item{ntraits}{integer. Number of traits in the model.}

\item{weights}{logical. Whether there is an additional column of weights.}
}
\value{
The number of levels and type for each 'virtual' effect; the progsf90
  model-name as appropriate; a file name and its content.
}
\description{
Translates breedR effects into progsf90 parameters and data.
}
\details{
This is an internal function. Not exported.

For the \code{generic} class, all matrices are converted to plain 
  matrix-class, for exporting to files. The progsf90 model is either
  \code{user_file} or \code{user_file_i} depending on the type of structure
  matrix; i.e. respectively precision or covariance.

For the \code{splines} class, everything reduces to a generic effect
  with a covariance matrix

For the \code{blocks} class, everything reduces to a generic effect
  with a covariance matrix

For the \code{ar} class, everything reduces to a generic effect
  with a precision matrix
}
\section{Methods (by class)}{
\itemize{
\item \code{renderpf90(default)}: For unknown classes, just returns the object untouched
with a warning.

\item \code{renderpf90(fixed)}: For fixed effects.

\item \code{renderpf90(diagonal)}: For diagonal effects. Assumed grouping variables.

\item \code{renderpf90(breedr_modelframe)}: Render a full \code{breedr_modelframe}

\item \code{renderpf90(effect_group)}: Render groups of effects into pf90 code

\item \code{renderpf90(generic)}: Compute the parameters of a progsf90 representation of
a generic effect.

\item \code{renderpf90(additive_genetic_animal)}: Compute the parameters of a progsf90 representation of
a additive_genetic_animal effect.

\item \code{renderpf90(additive_genetic_competition)}: Compute the parameters of a progsf90 representation of
a additive_genetic_competition effect.

\item \code{renderpf90(permanent_environmental_competition)}: Compute the parameters of a progsf90 representation of
a permanent_environmental_competition effect. Has the same incidence matrix
than the additive_genetic_competition effect but an unstructured covariance
matrix.

\item \code{renderpf90(splines)}: Compute the parameters of a progsf90 representation of
a splines effect.

\item \code{renderpf90(blocks)}: Compute the parameters of a progsf90 representation of
a blocks effect.

\item \code{renderpf90(ar)}: Compute the parameters of a progsf90 representation of
an AR effect.

}}
\seealso{
Other renderpf90: 
\code{\link{renderpf90.matrix}()}
}
\concept{renderpf90}
